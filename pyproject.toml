[build-system]
requires = ["setuptools>=69.0.0"]
build-backend = "setuptools.build_meta"


[project]
name = "vdrl"
version = "0.0.1"
authors = [
    { name = "Kenzo Boudier", email = "k.t.c.boudier@student.tudelft.nl" },
    { name = "Thijs Penning", email = "t.j.penning@student.tudelft.nl" },
    { name = "Milan de Koning", email = "m.dekoning-1@student.tudelft.nl" },
    { name = "Tyler Olson", email = "t.k.olson@student.tudelft.nl" },
    { name = "Adit Whorra", email = "awhorra@tudelft.nl" },
]
description = "CS4210-B - Intelligent Decision-Making Project"
readme = "README.md"
requires-python = ">=3.10"
# keywords = ["one", "two"]
# license = {text = "BSD-3-Clause"}
classifiers = ["Programming Language :: Python :: 3"]
dynamic = ["dependencies"]

[project.urls]
Homepage = "https://gitlab.tudelft.nl/slutz1/aidm-project-compositional-verification"
Repository = "https://gitlab.tudelft.nl/slutz1/aidm-project-compositional-verification.git"

# [project.optional-dependencies]
# pdf = ["ReportLab>=1.2", "RXP"]
# rest = ["docutils>=0.3", "pack ==1.1, ==1.3"]

[project.scripts]
run-minigrid-labyrinth = "vdrl.__main__:run_minigrid_labyrinth"
# run-minigrid-labyrinth = ".examples.run_minigrid_labyrinth:main"

[tool.setuptools.dynamic]
dependencies = { file = ["requirements.txt"] }

[tool.pytest.ini_options]
testpaths = ["unittest"]

# [tool.ruff]
# select = ["E4", "E7", "E9", "F", "I", "NPY", "D"]
# ignore = ["NPY002"]                               # Allow numpy.random legacy functions
# typing-modules = ["numpy.typing"]
#
# [tool.ruff.lint.per-file-ignores]
# "**/{test,unittest}/*" = ["D"]
# "setup.py" = ["D"]
#
# [tool.ruff.lint.pydocstyle]
# convention = "google"
#
# [tool.ruff.lint.isort]
# section-order = [
#     "future",
#     "standard-library",
#     "scipy",
#     "simulator",
#     "first-party",
#     "local-folder",
#     "third-party",
# ]
# known-first-party = ["src", "vdrl"]
#
# [tool.ruff.lint.isort.sections]
# # Group all scipy (numpy, matplotlib, etc) imports into a separate section.
# "scipy" = ["numpy", "scipy", "matplotlib"]
# # Group all simulator imports into a separate section.
# "simulator" = ["pybullet", "mpscenes", "urdfenvs"]
#
